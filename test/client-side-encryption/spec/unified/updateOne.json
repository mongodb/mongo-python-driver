{
  "description": "updateOne",
  "schemaVersion": "1.25",
  "runOnRequirements": [
    {
      "minServerVersion": "4.1.10",
      "csfle": {
        "minLibmongocryptVersion": "1.15.1"
      }
    }
  ],
  "createEntities": [
    {
      "client": {
        "id": "client0",
        "autoEncryptOpts": {
          "keyVaultNamespace": "keyvault.datakeys",
          "kmsProviders": {
            "aws": {
              "accessKeyId": {
                "$$placeholder": 1
              },
              "secretAccessKey": {
                "$$placeholder": 1
              }
            }
          }
        },
        "observeEvents": [
          "commandStartedEvent"
        ]
      }
    },
    {
      "database": {
        "id": "db",
        "client": "client0",
        "databaseName": "default"
      }
    },
    {
      "collection": {
        "id": "coll",
        "database": "db",
        "collectionName": "default"
      }
    },
    {
      "client": {
        "id": "client_unencrypted"
      }
    },
    {
      "database": {
        "id": "db_unencrypted",
        "client": "client_unencrypted",
        "databaseName": "default"
      }
    },
    {
      "collection": {
        "id": "coll_unencrypted",
        "database": "db_unencrypted",
        "collectionName": "default"
      }
    }
  ],
  "initialData": [
    {
      "databaseName": "default",
      "collectionName": "default",
      "documents": [
        {
          "_id": 1,
          "encrypted_string": {
            "$binary": {
              "base64": "AQAAAAAAAAAAAAAAAAAAAAACwj+3zkv2VM+aTfk60RqhXq6a/77WlLwu/BxXFkL7EppGsju/m8f0x5kBDD3EZTtGALGXlym5jnpZAoSIkswHoA==",
              "subType": "06"
            }
          }
        }
      ],
      "createOptions": {
        "validator": {
          "$jsonSchema": {
            "properties": {
              "encrypted_w_altname": {
                "encrypt": {
                  "keyId": "/altname",
                  "bsonType": "string",
                  "algorithm": "AEAD_AES_256_CBC_HMAC_SHA_512-Random"
                }
              },
              "encrypted_string": {
                "encrypt": {
                  "keyId": [
                    {
                      "$binary": {
                        "base64": "AAAAAAAAAAAAAAAAAAAAAA==",
                        "subType": "04"
                      }
                    }
                  ],
                  "bsonType": "string",
                  "algorithm": "AEAD_AES_256_CBC_HMAC_SHA_512-Deterministic"
                }
              },
              "random": {
                "encrypt": {
                  "keyId": [
                    {
                      "$binary": {
                        "base64": "AAAAAAAAAAAAAAAAAAAAAA==",
                        "subType": "04"
                      }
                    }
                  ],
                  "bsonType": "string",
                  "algorithm": "AEAD_AES_256_CBC_HMAC_SHA_512-Random"
                }
              },
              "encrypted_string_equivalent": {
                "encrypt": {
                  "keyId": [
                    {
                      "$binary": {
                        "base64": "AAAAAAAAAAAAAAAAAAAAAA==",
                        "subType": "04"
                      }
                    }
                  ],
                  "bsonType": "string",
                  "algorithm": "AEAD_AES_256_CBC_HMAC_SHA_512-Deterministic"
                }
              }
            },
            "bsonType": "object"
          }
        }
      }
    },
    {
      "databaseName": "keyvault",
      "collectionName": "datakeys",
      "documents": [
        {
          "status": 1,
          "_id": {
            "$binary": {
              "base64": "AAAAAAAAAAAAAAAAAAAAAA==",
              "subType": "04"
            }
          },
          "masterKey": {
            "provider": "aws",
            "key": "arn:aws:kms:us-east-1:579766882180:key/89fcc2c4-08b0-4bd9-9f25-e30687b580d0",
            "region": "us-east-1"
          },
          "updateDate": {
            "$date": {
              "$numberLong": "1552949630483"
            }
          },
          "keyMaterial": {
            "$binary": {
              "base64": "AQICAHhQNmWG2CzOm1dq3kWLM+iDUZhEqnhJwH9wZVpuZ94A8gEqnsxXlR51T5EbEVezUqqKAAAAwjCBvwYJKoZIhvcNAQcGoIGxMIGuAgEAMIGoBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDHa4jo6yp0Z18KgbUgIBEIB74sKxWtV8/YHje5lv5THTl0HIbhSwM6EqRlmBiFFatmEWaeMk4tO4xBX65eq670I5TWPSLMzpp8ncGHMmvHqRajNBnmFtbYxN3E3/WjxmdbOOe+OXpnGJPcGsftc7cB2shRfA4lICPnE26+oVNXT6p0Lo20nY5XC7jyCO",
              "subType": "00"
            }
          },
          "creationDate": {
            "$date": {
              "$numberLong": "1552949630483"
            }
          },
          "keyAltNames": [
            "altname",
            "another_altname"
          ]
        }
      ]
    }
  ],
  "tests": [
    {
      "description": "updateOne with deterministic encryption",
      "operations": [
        {
          "name": "updateOne",
          "arguments": {
            "filter": {
              "encrypted_string": "string0"
            },
            "update": {
              "$set": {
                "encrypted_string": "string1",
                "random": "abc"
              }
            }
          },
          "object": "coll",
          "expectResult": {
            "matchedCount": 1,
            "modifiedCount": 1,
            "upsertedCount": 0
          }
        },
        {
          "name": "find",
          "object": "coll_unencrypted",
          "arguments": {
            "filter": {}
          },
          "expectResult": [
            {
              "_id": 1,
              "encrypted_string": {
                "$binary": {
                  "base64": "AQAAAAAAAAAAAAAAAAAAAAACDdw4KFz3ZLquhsbt7RmDjD0N67n0uSXx7IGnQNCLeIKvot6s/ouI21Eo84IOtb6lhwUNPlSEBNY0/hbszWAKJg==",
                  "subType": "06"
                }
              },
              "random": {
                "$$type": "binData"
              }
            }
          ]
        }
      ],
      "expectEvents": [
        {
          "client": "client0",
          "events": [
            {
              "commandStartedEvent": {
                "command": {
                  "listCollections": 1,
                  "filter": {
                    "name": "default"
                  }
                },
                "commandName": "listCollections"
              }
            },
            {
              "commandStartedEvent": {
                "command": {
                  "find": "datakeys",
                  "filter": {
                    "$or": [
                      {
                        "_id": {
                          "$in": [
                            {
                              "$binary": {
                                "base64": "AAAAAAAAAAAAAAAAAAAAAA==",
                                "subType": "04"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "keyAltNames": {
                          "$in": []
                        }
                      }
                    ]
                  },
                  "$db": "keyvault",
                  "readConcern": {
                    "level": "majority"
                  }
                },
                "commandName": "find"
              }
            },
            {
              "commandStartedEvent": {
                "command": {
                  "update": "default",
                  "updates": [
                    {
                      "q": {
                        "encrypted_string": {
                          "$eq": {
                            "$binary": {
                              "base64": "AQAAAAAAAAAAAAAAAAAAAAACwj+3zkv2VM+aTfk60RqhXq6a/77WlLwu/BxXFkL7EppGsju/m8f0x5kBDD3EZTtGALGXlym5jnpZAoSIkswHoA==",
                              "subType": "06"
                            }
                          }
                        }
                      },
                      "u": {
                        "$set": {
                          "encrypted_string": {
                            "$binary": {
                              "base64": "AQAAAAAAAAAAAAAAAAAAAAACDdw4KFz3ZLquhsbt7RmDjD0N67n0uSXx7IGnQNCLeIKvot6s/ouI21Eo84IOtb6lhwUNPlSEBNY0/hbszWAKJg==",
                              "subType": "06"
                            }
                          },
                          "random": {
                            "$$type": "binData"
                          }
                        }
                      },
                      "multi": false,
                      "upsert": false
                    }
                  ],
                  "ordered": true
                },
                "commandName": "update"
              }
            }
          ]
        }
      ]
    },
    {
      "description": "updateOne fails when filtering on a random field",
      "operations": [
        {
          "name": "updateOne",
          "arguments": {
            "filter": {
              "random": "abc"
            },
            "update": {
              "$set": {
                "encrypted_string": "string1"
              }
            }
          },
          "object": "coll",
          "expectError": {
            "errorContains": "Cannot query on fields encrypted with the randomized encryption"
          }
        }
      ]
    },
    {
      "description": "$unset works with an encrypted field",
      "operations": [
        {
          "name": "updateOne",
          "arguments": {
            "filter": {},
            "update": {
              "$unset": {
                "encrypted_string": ""
              }
            }
          },
          "object": "coll",
          "expectResult": {
            "matchedCount": 1,
            "modifiedCount": 1,
            "upsertedCount": 0
          }
        }
      ],
      "outcome": [
        {
          "documents": [
            {
              "_id": 1
            }
          ],
          "collectionName": "default",
          "databaseName": "default"
        }
      ],
      "expectEvents": [
        {
          "client": "client0",
          "events": [
            {
              "commandStartedEvent": {
                "command": {
                  "listCollections": 1,
                  "filter": {
                    "name": "default"
                  }
                },
                "commandName": "listCollections"
              }
            },
            {
              "commandStartedEvent": {
                "command": {
                  "update": "default",
                  "updates": [
                    {
                      "q": {},
                      "u": {
                        "$unset": {
                          "encrypted_string": ""
                        }
                      },
                      "multi": {
                        "$$unsetOrMatches": false
                      },
                      "upsert": {
                        "$$unsetOrMatches": false
                      }
                    }
                  ],
                  "ordered": true
                },
                "commandName": "update"
              }
            }
          ]
        }
      ]
    },
    {
      "description": "$rename works if target value has same encryption options",
      "operations": [
        {
          "name": "updateOne",
          "arguments": {
            "filter": {},
            "update": {
              "$rename": {
                "encrypted_string": "encrypted_string_equivalent"
              }
            }
          },
          "object": "coll",
          "expectResult": {
            "matchedCount": 1,
            "modifiedCount": 1,
            "upsertedCount": 0
          }
        }
      ],
      "outcome": [
        {
          "documents": [
            {
              "_id": 1,
              "encrypted_string_equivalent": {
                "$binary": {
                  "base64": "AQAAAAAAAAAAAAAAAAAAAAACwj+3zkv2VM+aTfk60RqhXq6a/77WlLwu/BxXFkL7EppGsju/m8f0x5kBDD3EZTtGALGXlym5jnpZAoSIkswHoA==",
                  "subType": "06"
                }
              }
            }
          ],
          "collectionName": "default",
          "databaseName": "default"
        }
      ],
      "expectEvents": [
        {
          "client": "client0",
          "events": [
            {
              "commandStartedEvent": {
                "command": {
                  "listCollections": 1,
                  "filter": {
                    "name": "default"
                  }
                },
                "commandName": "listCollections"
              }
            },
            {
              "commandStartedEvent": {
                "command": {
                  "update": "default",
                  "updates": [
                    {
                      "q": {},
                      "u": {
                        "$rename": {
                          "encrypted_string": "encrypted_string_equivalent"
                        }
                      },
                      "multi": {
                        "$$unsetOrMatches": false
                      },
                      "upsert": {
                        "$$unsetOrMatches": false
                      }
                    }
                  ],
                  "ordered": true
                },
                "commandName": "update"
              }
            }
          ]
        }
      ]
    },
    {
      "description": "$rename fails if target value has different encryption options",
      "operations": [
        {
          "name": "updateOne",
          "arguments": {
            "filter": {},
            "update": {
              "$rename": {
                "encrypted_string": "random"
              }
            }
          },
          "object": "coll",
          "expectError": {
            "errorContains": "$rename between two encrypted fields must have the same metadata or both be unencrypted"
          }
        }
      ]
    },
    {
      "description": "an invalid update (no $ operators) is validated and errors",
      "operations": [
        {
          "name": "updateOne",
          "arguments": {
            "filter": {},
            "update": {
              "encrypted_string": "random"
            }
          },
          "object": "coll",
          "expectError": {
            "errorContains": ""
          }
        }
      ]
    }
  ]
}
